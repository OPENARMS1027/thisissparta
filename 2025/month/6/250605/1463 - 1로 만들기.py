'''
DP의 메모이제이션 사용
1까지 가는데의 연산 횟수를 세는 것이 아닌
반대로 1부터 N까지 가는 횟수를 계산해서 배열에 저장

메모이제이션을 통해 중간 결과를 저장해서 같은 계산을 여러 번 반복하지 않게 하여
시간, 연산량을 크게 줄여준다.
기본으로 +1 해서 온 것으로 이전 거에서 횟수 1만큼 더 해준다.
만약 2, 3 으로 나눠지는 경우가 있다면 dp의 인덱싱별 원소(횟수)를 비교한다. (최솟값 기준(최단거리))
'''

import sys
N = int(sys.stdin.readline())

dp = [0] * (N+1)

for i in range(2,N+1):
    # 기본으로 +1 해서 간다고 생각하고 아래에서 비교 후 할당
    dp[i] = dp[i-1] + 1

    if i % 2 == 0:
        dp[i] = min(dp[i], dp[i//2] + 1)

    if i % 3 == 0:
        dp[i] = min(dp[i], dp[i//3] + 1)

print(dp[N])